question link:   https://practice.geeksforgeeks.org/problems/diameter-of-binary-tree/1
solution video link:  https://www.youtube.com/watch?v=nHMQ33LZ6oA&list=PLDzeHZWIZsTryvtXdMr6rPh4IDexB5NIA&index=69
time stamp: 14:18

struct Node
{
    int data;
    struct Node* left;
    struct Node* right;

    Node(int x){
        data = x;
        left = right = NULL;
    }
}; */

class Solution {
    private:
    int height(Node* node)
    {
        if(node==NULL)
        {
            return 0;
        }
        
        int left=height(node->left);
        int right=height(node->right);
        
        int ans=max(left,right)+1;
        return ans;
    }
  public:
    // Function to return the diameter of a Binary Tree.
    
    int diameter(Node* root) {
        if(root==NULL)
        {
            return 0;
        }
        
        int op1=diameter(root->left);
        int op2=diameter(root->right);
        int op3=height(root->left)+height(root->right)+1;
        
        int ans =max(op1,max(op2,op3));
        return ans;
    }
    
};
